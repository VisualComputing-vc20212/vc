<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://visualcomputing-vc20212.github.io/vc/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing-vc20212.github.io/vc/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Alejandra-Zambrano/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Alejandra-Zambrano/</guid><description>Alejandra Zambrano # Quien soy # Tengo 21 años y voy en noveno semestre. Llevo trabajando en desarrollo front-end con asp.net y C# desde hace maso menos un año. Adicional recientemente estoy trabajando como monitora en un diplomado de Python de la universidad.
En que me gustaría enfocarme # Me apasiona el aprendizaje de maquina, ya he hecho diferentes cursos de coursera relacionados con el tema y me enamore.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Andres-Ardila/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Andres-Ardila/</guid><description>Andres Ardila # Quien soy # Soy estudiante de 9no semestre de Ingeniería de Sistemas de la Universidad Nacional de Colombia. Tengo 23 años y soy de Bogotá, Colombia
En que me gustaría enfocarme # No lo sé aún, quizas en la rama administrativa de la carrera.
Hobbies # Me gusta el fútbol y los videojuegos.
Experiencia con graficos # En asignaturas pasadas hemos intentado jugar con estilos css y en un pasado con interfaces gráficas de Java.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Catalina-Aldana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Catalina-Aldana/</guid><description>Catalina Aldana # Quien soy # Soy estudiante de noveno semestre de Ingenieria de Sistemas de la Universidad Nacional de Colombia. Tengo 22 años y naci en Bogota, Colombia.
En que me gustaria enfocarme # Aun no tengo muy claro en que area de la carrera me gustaria enfocarme, creo que comenzare con desarrollo de software y a medida que vaya ampliando mi conocimiento y experiencia decidire en que area trabajar.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Diego-Bayona/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Diego-Bayona/</guid><description>Diego Bayona # Quien soy # Soy estudiante de noveno semestre de Ingenieria de Sistemas y Computacion de la Universidad Naciolnal de Colombia, tengo 21 años, he trabajado como ayudante de desarrollo para proyectos en la universidad y como tutor de programacion, mis lenguajes preferidos son python, javascript, C++ y en cuanto a desarrollo me gusta mas la parte enfocada al frontend en frameworks como React.js y Vue.js</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Lucas-Pe%C3%B1a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Lucas-Pe%C3%B1a/</guid><description>Lucas Peña # Quienes somos # Soy Lucas Peña tengo 22 años y soy estudiante de noveno semestre de Ingenieria de Sistemas en la Universida Nacional de Colombia. Actualmente trabajo como desarrollador de software en una empresa enfocada a las telecomunicaciones, desarrollo principalmente en C#.
En que me gustaría enfocarme # Aunque actualmente soy desarrollador de software, no creo que sea el área donde quiera enfocarme. Siempre he tenido un fuerte interes por los videojuegos, así que esa podría ser el área en la que me gustaría enfocarme.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Integrantes/Test/</guid><description>##TEST
let img; function preload(){ img = loadImage(&amp;#39;https://pbs.twimg.com/profile_images/1317243402396831744/vOz-5Cju_400x400.jpg&amp;#39;); } function setup() { BG = color(&amp;#34;#f1f1f1&amp;#34;); FG = color(&amp;#34;#111111&amp;#34;); createCanvas(700, 700); img.resize(700, 700); } function draw() { background(BG); fill(FG); noStroke(); let ratio = float(height)/float(width); let tilesX = map(mouseX, 0, width, 10, 100); let tilesY = ratio * tilesX; let tileSize = width / tilesX; for (let y = 0; y &amp;lt; img.height; y &amp;#43;= tileSize) { for (let x = 0; x &amp;lt; img.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Rendering/Painters-Algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Rendering/Painters-Algorithm/</guid><description>Painters' Algorithm # El algoritmo del pintor, también algoritmo de ordenación de la profundidad o relleno prioritario, es un algoritmo para la determinación de la superficie visible en gráficos 3D,que funciona polígono a polígono para la eliminación de superficies ocultas al punto de vista del observador. Este algoritmo crea imágenes clasificando los polígonos dentro de la imagen por su profundidad y colocando cada polígono en orden desde el objeto más lejano al más cercano.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Rendering/Rasterizaci%C3%B3n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Rendering/Rasterizaci%C3%B3n/</guid><description>Rasterización # Explicación # Este algoritmo de rasterización utiliza el brillo de cada pixel para asignar el tamaño de cada celda. Esto se asocia mucho a las técnicas de antialiasing, esta técnica se trata en que si un pixel se encuentra dentro de cierta area, basado en el brillo de este, se pinta o no el pixel, la técnica consta en que cada vez se van haciendo más y más subparticiones dentro de los pixeles para así dejar una imagen clara y lisa.</description></item><item><title/><link>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Rendering/Vertex-Shander-and-Fragment-Shader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-vc20212.github.io/vc/docs/shortcodes/Rendering/Vertex-Shander-and-Fragment-Shader/</guid><description>Vertex Shader and Fragment Shader # Referencias # https://openprocessing.org/sketch/1391541 by Prakhar Aditya</description></item></channel></rss>